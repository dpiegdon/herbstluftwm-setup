#!/bin/bash -ex

hc() {
	herbstclient "$@"
}

hc_ui_config() {
	# also see:
	# https://herbstluftwm.org/object-doc.html

	#######################################################################
	# UI BINDINGS

	hc emit_hook reload
	hc keyunbind --all
	#
	Mod=Mod4   # Use the super key as the main modifier

	hc keybind $Mod-Control-Shift-q   quit
	hc keybind $Mod-Shift-q           reload
	hc keybind $Mod-q                 close
	hc keybind $Mod-Control-Return    spawn terminal -e tmux -2 attach
	hc keybind $Mod-BackSpace         spawn dmenu_run -fn Monoid-7

	# laptop function row
	hc keybind XF86AudioMute          spawn amixer sset Master toggle
	hc keybind XF86AudioLowerVolume   spawn amixer set Master 5%-
	hc keybind XF86AudioRaiseVolume   spawn amixer set Master 5%+
	hc keybind XF86AudioMicMute       spawn amixer sset Capture toggle
	hc keybind XF86MonBrightnessDown  spawn backlightctl intel_backlight - 2
	hc keybind XF86MonBrightnessUp    spawn backlightctl intel_backlight + 2
	hc keybind XF86Display            spawn displace landscape
	hc keybind $Mod-XF86Display       spawn displace -av
	hc keybind Shift-XF86Display      spawn displace portrait
	#hc keybind XF86WLAN
	hc keybind XF86Messenger          spawn xinput set-prop "SynPS/2 Synaptics TouchPad" "Device Enabled" 1
	hc keybind Shift-XF86Messenger    spawn xinput set-prop "SynPS/2 Synaptics TouchPad" "Device Enabled" 0
	#hc keybind XF86Go
	#hc keybind Cancel
	#hc keybind XF86Favorites

	hc keybind $Mod-F12               spawn pavucontrol

	hc keybind $Mod-v                 spawn paste_to_qrcode
	hc keybind $Mod-s                 spawn /usr/bin/gnome-screenshot
	hc keybind $Mod-Shift-s           spawn /usr/bin/gnome-screenshot --window

	# basic movement in tiling and floating mode
	# focusing clients
	hc keybind $Mod-h                 focus left
	hc keybind $Mod-j                 focus down
	hc keybind $Mod-k                 focus up
	hc keybind $Mod-l                 focus right

	# moving clients in tiling and floating mode
	hc keybind $Mod-Shift-h           shift left
	hc keybind $Mod-Shift-j           shift down
	hc keybind $Mod-Shift-k           shift up
	hc keybind $Mod-Shift-l           shift right

	# splitting/removing frames
	# create an empty frame at the specified direction / explode into subframes
	hc keybind $Mod-apostrophe   	  split bottom
	hc keybind $Mod-bracketright 	  split right
	hc keybind $Mod-Shift-x           split explode
	# merge the current frame with its peer
	hc keybind $Mod-x                 remove

	hc keybind $Mod-Shift-space       rotate
	hc keybind $Mod-Control-space     rotate

	# resizing frames and floating clients
	resizestep=0.02
	hc keybind $Mod-Control-h         resize left +$resizestep
	hc keybind $Mod-Control-j         resize down +$resizestep
	hc keybind $Mod-Control-k         resize up +$resizestep
	hc keybind $Mod-Control-l         resize right +$resizestep

	# tags
	tag_names=( {1..9} 0 - = )
	tag_keys=( {1..9} 0 minus equal )

	hc rename default "${tag_names[0]}" || true
	for i in "${!tag_names[@]}" ; do
	    hc add "${tag_names[$i]}"
	    key="${tag_keys[$i]}"
	    if [ -n "$key" ] ; then
		hc keybind "$Mod-$key" use_index "$i"
		hc keybind "$Mod-Shift-$key" move_index "$i"
	    fi
	done

	# cycle through tags
	hc keybind $Mod-period            use_index +1 --skip-visible
	hc keybind $Mod-comma             use_index -1 --skip-visible

	# overall focus
	hc keybind $Mod-Tab               cycle_all +1
	hc keybind $Mod-Shift-Tab         cycle_all -1
	#hc keybind $Mod-c cycle
	#hc keybind $Mod-i jumpto urgent

	# layouting
	hc keybind $Mod-Return            fullscreen toggle
	hc keybind $Mod-Shift-f           floating toggle                          # set whole TAG to floating
	hc keybind $Mod-f                 set_attr clients.focus.floating toggle   # or only current window
	hc keybind $Mod-d                 set_attr clients.focus.decorated toggle
	hc keybind $Mod-m                 set_attr clients.focus.minimized true
	hc keybind $Mod-Shift-m           jumpto last-minimized
	# unminimize all clients
	hc keybind $Mod-Control-m \
		substitute FOCUS "tags.focus.name" \
		foreach CLIENT clients. \
			sprintf MINATT "%c.minimized" CLIENT \
			sprintf TAGATT "%c.tag" CLIENT and \
				, compare MINATT "=" "true" \
				, compare TAGATT "=" FOCUS \
				, set_attr MINATT false

	#hc keybind $Mod-p pseudotile toggle

	# The following cycles through the available layouts within a frame, but skips
	# layouts, if the layout change wouldn't affect the actual window positions.
	# I.e. if there are two windows within a frame, the grid layout is skipped.
	hc keybind $Mod-space                                                           \
		    or , and . compare tags.focus.curframe_wcount = 2                   \
			     . cycle_layout +1 vertical horizontal max vertical grid    \
		       , cycle_layout +1

	#####################
	# MOUSE
	MouseLeft=Button1
	MouseMiddle=Button2
	MouseRight=Button3
	hc mouseunbind --all
	hc mousebind $Mod-$MouseLeft         move
	hc mousebind $Mod-Shift-$MouseLeft   zoom
	hc mousebind $Mod-Control-$MouseLeft resize
	hc mousebind $Mod-Alt-$MouseLeft     call set_attr clients.focus.floating toggle
	hc mousebind $Mod-$MouseMiddle       zoom
	hc mousebind $Mod-$MouseRight        resize
	#hc mousebind $Mod-$MouseMiddle       call set_attr clients.focus.fullscreen toggle
	#hc mousebind $Mod-$MouseRight        call set_attr clients.focus.minimized true
	#hc mousebind $Mod-Shift-$MouseRight  call jumpto last-minimized
	hc set focus_follows_mouse           true
	hc set snap_distance                 7
	hc set snap_gap                      1

	#####################
	# MONITOR SELECTION
	hc keybind $Mod-w                 focus_monitor 0
	hc keybind $Mod-Shift-w           shift_to_monitor 0
	hc keybind $Mod-e                 focus_monitor 1
	hc keybind $Mod-Shift-e           shift_to_monitor 1
	hc keybind $Mod-r                 focus_monitor 2
	hc keybind $Mod-Shift-r           shift_to_monitor 2
	hc keybind $Mod-t                 focus_monitor 3
	hc keybind $Mod-Shift-t           shift_to_monitor 3
	hc set focus_crosses_monitor_boundaries false
	hc set mouse_recenter_gap        50

	#######################################################################
	# UI LOOKS
	hc attr theme.tiling.reset 1
	hc attr theme.floating.reset 1

	hc attr theme.title_height       11
	hc attr theme.title_when         multiple_tabs
	hc attr theme.title_font         'Dejavu Sans:pixelsize=10'
	hc attr theme.title_depth        1          # space below the title's baseline
	hc attr theme.title_color        '#ffffff'

	#####################
	# BORDER WIDTHS
	hc set frame_border_width        3
	hc set show_frame_decorations    'if_multiple'
	hc set frame_gap                 1

	hc attr theme.inner_width        0
	hc attr theme.border_width       3

	hc attr theme.floating.border_width 4
	hc attr theme.floating.outer_width 1
	hc attr theme.floating.outer_color black

	hc attr theme.tiling.outer_width 0

	hc set window_gap                0
	hc set frame_padding             1

	hc set smart_frame_surroundings  hide_all
	hc set smart_window_surroundings on

	#####################
	# BORDER COLORS
	hc set frame_border_active_color '#ff0000'
	hc set frame_border_normal_color '#008888'

	hc attr theme.active.color       '#00ff00'
	hc attr theme.normal.color       '#884444'
	hc attr theme.urgent.color       '#7811A1dd'
	hc attr theme.normal.title_color '#898989'

	hc attr theme.tab_color          '#000088'
	hc attr theme.active.tab_color   '#00ff00'
	hc attr theme.active.tab_outer_color '#6C8257'
	hc attr theme.active.tab_title_color '#ABABAB'


	#######################################################################
	# RULES
	hc unrule -F
	#hc rule class=XTerm tag=3   # move all xterms to tag 3
	hc rule focus=on   # normally focus new clients
	#hc rule floatplacement=smart
	hc rule floatplacement=none
	#hc rule focus=off # normally do not focus new clients
	# give focus to most common terminals
	#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
	hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
	hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
	hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
	hc rule fixedsize floating=on

	hc set tree_style '╾│ ├└╼─┐'

	#######################################################################
	# FINISH SETUP
	# do multi monitor setup here, e.g.:
	# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
	# or simply:
	hc detect_monitors
	hc attr settings.auto_detect_monitors true
	# unlock, just to be sure
	hc unlock
}

xsetroot -solid '#220033'

hc_ui_config

for BINARY in	polybar \
		nm-applet \
		blueman-applet \
		vmware-user \
		; do
	which $BINARY && { pgrep $BINARY || ($BINARY &) }
done;

xsetroot -solid '#330011'
